---
interface Props {
    longitude: number | null;
    latitude: number | null;
    title: string;
}

const { longitude, latitude, title } = Astro.props;
---

<>
    <section id="map" class="h-[400px] rounded-3xl"></section>

    <template
        data-longitude={longitude}
        data-latitude={latitude}
        data-title={title}></template>

    <script
        async
        defer
        is:inline
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBGvxOSNHyYXvis9yTKjBuYIJK87dvyxsM&callback=initMap"
    ></script>
    <script is:inline defer>
        let map;
        let marker;
        let geocoder;

        const { longitude, latitude, title } =
            document.querySelector("template").dataset;

        const lng = parseFloat(longitude);
        const lat = parseFloat(latitude);

        async function initMap() {
            // geocoder = new google.maps.Geocoder();
            // geocoder.geocode({"address": })

            const marketLocation = { lat, lng };

            map = new google.maps.Map(document.getElementById("map"), {
                center: marketLocation,
                zoom: 18,
            });

            marker = new google.maps.Marker({
                position: marketLocation,
                map,
                title: title,
                icon: "https://cdn.prod.website-files.com/66637bfce5ac00faa1c7cbd8/666c16f69717f0890a570e5e_Pin%20icon.svg",
            });
        }

        initMap();
    </script>
</>
