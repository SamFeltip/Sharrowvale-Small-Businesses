---
import HeaderContent from "@/components/HeaderContent.astro";
import ContentPromotions from "@/components/content/ContentPromotions.astro";
import H1 from "@/components/elements/headers/H1.astro";
import SearchWrapper from "@/components/search/SearchWrapper.vue";
import ContentLayout from "@/layouts/ContentLayout.astro";
import { getCollection, getEntries, type CollectionEntry } from "astro:content";

export async function getStaticPaths() {
    const tag: CollectionEntry<"tags">[] = await getCollection(
        "tags",
        (tag) => tag.data.isPage
    );
    return tag.map((business) => ({
        params: { slug: business.slug },
        props: business,
    }));
}

type Props = CollectionEntry<"tags">;

const entry: Props = Astro.props;
const { name, description, bannerImage, promotedBusinesses, relatedTags } =
    entry.data;

if (bannerImage == null) {
    throw new Error("isPage tags must have banner images");
}

const { Content } = await entry.render();

const promoBusinesses = await getEntries(promotedBusinesses);
const promoCategories = await getEntries(relatedTags);

const tags = await getCollection("tags", (tag) => !tag.data.isVisible);

const hiddenTags = tags.map((tag) => tag.data.name);

const businesses = await getCollection("businesses", ({ data }) =>
    data.tags.some((tag) => tag.slug === entry.slug)
);

const isGridLayout = businesses.length >= 6;
---

<ContentLayout
    image={bannerImage}
    title={name}
    description={description}
    classList="gap-12 py-12"
    HeaderContent={HeaderContent}
>
    <section class="text-center">
        <Content />
    </section>

    {
        promoBusinesses.length >= 4 && (
            <ContentPromotions businesses={promoBusinesses} classList="" />
        )
    }

    <SearchWrapper
        client:only="vue"
        requiredCategories={["Directory"]}
        requiredTag={name}
        isGridLayout={isGridLayout}
        hiddenTags={hiddenTags}
    />

    {
        promoCategories.length > 0 && (
            <section class="text-center">
                <H1 color="coral">Export more Categories</H1>
                <div>
                    <ul>
                        {promoCategories.map((tag) => (
                            <li>
                                <a href={`/tags/${tag.slug}`}>
                                    {tag.data.name}
                                </a>
                            </li>
                        ))}
                    </ul>
                </div>
            </section>
        )
    }
</ContentLayout>
