---
import SearchWrapper from "@/components/search/SearchWrapper.vue";

import ContentLayout from "@/layouts/ContentLayout.astro";
import HeaderContent from "@/components/HeaderContent.astro";

import Section from "@/components/elements/sections/FloatSection.astro";

import { getCollection, getEntries, type CollectionEntry } from "astro:content";
import ContentCollectionItem from "@/components/elements/contentCollectionWrapper/ContentCollectionItem.astro";
import PromoBanner from "@/components/elements/promos/PromoBanner.vue";
import PromotedTags from "@/components/elements/promos/PromotedTags.astro";
import ScreenWidth from "@/components/elements/ScreenWidth.vue";
import type { PlaceCard } from "@/components/placeCards/PlaceCard";
import type { GenericCollectionEntry } from "@/components/placeCards/PlaceCardRef";
import { getPlaceCardsFromArticles } from "@/scripts/placeCard/handler";

export async function getStaticPaths() {
    const category: CollectionEntry<"categories">[] =
        await getCollection("categories");
    return category.map((category) => ({
        params: { slug: category.slug },
        props: category,
    }));
}

type Props = CollectionEntry<"categories">;

const entry: Props = Astro.props;

const { Content } = await entry.render();

const { name, description, bannerImage, isGridLayout, relatedTags } =
    entry.data;

const promoTags = await getEntries(relatedTags ?? []);

const promotedItems = promoTags.map((tag) => ({
    type: "tags",
    collectionEntry: tag,
}));

// const promoTagPlaceCards = await getPlaceCardsFromTags(promoTags);

const searchCategoryCollection = [name];
---

<ContentLayout
    title={name}
    description={description}
    image={bannerImage}
    HeaderContent={HeaderContent}
    classList="gap-8"
    pagefindIgnore={true}
>
    <ScreenWidth classList="md:gap-10 gap-8">
        <div class="flex flex-col items-center gap-4">
            <ContentCollectionItem>
                <Content />
            </ContentCollectionItem>
        </div>

        <Section floatIn={true}>
            <SearchWrapper
                client:only="vue"
                requiredCategories={searchCategoryCollection}
                isGridLayout={isGridLayout}
            />
        </Section>

        {
            promoTags.length > 0 && (
                <PromotedTags
                    title="Explore more Categories"
                    promotedItems={promotedItems}
                />
            )
        }

        {
            isGridLayout && (
                <div class="flex flex-col items-center">
                    <PromoBanner callToAction="Get listed on this site for only Â£20 a year" />
                </div>
            )
        }
    </ScreenWidth>
</ContentLayout>
